version: '3.8'

services:
  bufferbloat-tester:
    build: .
    container_name: bufferbloat-tester
    ports:
      # Container listen port mapping
      - "${LISTEN_PORT:-8081}:${LISTEN_PORT:-8081}"
    environment:
      # Container Configuration
      - LISTEN_PORT=${LISTEN_PORT:-8081}
      - PUBLIC_URL=${PUBLIC_URL:-http://localhost:8081}
      
      # Bandwidth Limits (optional)
      - MAX_DOWNLOAD_MBPS=${MAX_DOWNLOAD_MBPS}
      - MAX_UPLOAD_MBPS=${MAX_UPLOAD_MBPS}
      
      # Application Settings
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # Test Configuration
      - DEFAULT_TEST_DURATION=${DEFAULT_TEST_DURATION:-30}
      - DEFAULT_PACKET_SIZE=${DEFAULT_PACKET_SIZE:-1024}
      - DEFAULT_PACKET_RATE=${DEFAULT_PACKET_RATE:-100}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - bufferbloat-net
    volumes:
      # Optional: mount logs directory if you want persistent logs
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:' + (process.env.LISTEN_PORT || 8081) + '/api/config', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => { process.exit(1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  bufferbloat-net:
    driver: bridge
    name: bufferbloat-network

volumes:
  logs:
    driver: local